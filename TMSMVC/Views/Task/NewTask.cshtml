@model TMSMVC.ViewModel.TaskCreate

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Add Task</h4>
            </div>
            <div class="modal-body">
                <form>
                    
                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "form-group" })
                            @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" }, @id = "TaskName", @placeholder = "Task Name" })
                            @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SelectedAssignee, htmlAttributes: new { @class = "form-group" })
                        @*   @Html.DropDownListFor(model => model.SelectedAssignee, Model.Assignee, "--Select Assignee--", htmlAttributes: new { @class = "form-control", id = "Assignee" })*@
                            @Html.ValidationMessageFor(model => model.SelectedAssignee, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SelectedAssigner, htmlAttributes: new { @class = "form-group" })
                            @Html.EditorFor(model => model.SelectedAssigner, new { htmlAttributes = new { @class = "form-control", @id = "Assigner", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.SelectedAssigner, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignedDate, htmlAttributes: new { @class = "form-group" })
                            @Html.EditorFor(model => model.AssignedDate, "{0:dd-MM-yyyy}", new { htmlAttributes = new { @class = "form-control", @id = "AssignedDate" } })
                            @Html.ValidationMessageFor(model => model.AssignedDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "form-group" })
                            @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @id = "Duedate" } })
                            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SelectedStatus, htmlAttributes: new { @class = "form-group" })
                          @*  @Html.DropDownListFor(model => model.SelectedStatus, Model.Status, htmlAttributes: new { @class = "form-control", @id = "Status" })*@
                            @Html.ValidationMessageFor(model => model.SelectedStatus, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SelectedPriority, htmlAttributes: new { @class = "form-group" })
                          @*  @Html.DropDownListFor(model => model.SelectedPriority, Model.Priority, "--Select Priority--", htmlAttributes: new { @class = "form-control", @id = "Priority" })*@
                            @Html.ValidationMessageFor(model => model.SelectedPriority, "", new { @class = "text-danger" })
                        </div>
                    }
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnAdd" data-dismiss="modal" onclick="Add();">Add</button>
                <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="Update();">Update</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
